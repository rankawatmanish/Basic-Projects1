/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.bigdata.training.fileformats.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Trade extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Trade\",\"namespace\":\"edu.bigdata.training.fileformats.avro\",\"fields\":[{\"name\":\"stock_symbol\",\"type\":\"string\"},{\"name\":\"trade_time\",\"type\":\"long\"},{\"name\":\"trade_price\",\"type\":\"double\"},{\"name\":\"sequence_num\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence stock_symbol;
  @Deprecated public long trade_time;
  @Deprecated public double trade_price;
  @Deprecated public java.lang.Integer sequence_num;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Trade() {}

  /**
   * All-args constructor.
   */
  public Trade(java.lang.CharSequence stock_symbol, java.lang.Long trade_time, java.lang.Double trade_price, java.lang.Integer sequence_num) {
    this.stock_symbol = stock_symbol;
    this.trade_time = trade_time;
    this.trade_price = trade_price;
    this.sequence_num = sequence_num;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stock_symbol;
    case 1: return trade_time;
    case 2: return trade_price;
    case 3: return sequence_num;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stock_symbol = (java.lang.CharSequence)value$; break;
    case 1: trade_time = (java.lang.Long)value$; break;
    case 2: trade_price = (java.lang.Double)value$; break;
    case 3: sequence_num = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stock_symbol' field.
   */
  public java.lang.CharSequence getStockSymbol() {
    return stock_symbol;
  }

  /**
   * Sets the value of the 'stock_symbol' field.
   * @param value the value to set.
   */
  public void setStockSymbol(java.lang.CharSequence value) {
    this.stock_symbol = value;
  }

  /**
   * Gets the value of the 'trade_time' field.
   */
  public java.lang.Long getTradeTime() {
    return trade_time;
  }

  /**
   * Sets the value of the 'trade_time' field.
   * @param value the value to set.
   */
  public void setTradeTime(java.lang.Long value) {
    this.trade_time = value;
  }

  /**
   * Gets the value of the 'trade_price' field.
   */
  public java.lang.Double getTradePrice() {
    return trade_price;
  }

  /**
   * Sets the value of the 'trade_price' field.
   * @param value the value to set.
   */
  public void setTradePrice(java.lang.Double value) {
    this.trade_price = value;
  }

  /**
   * Gets the value of the 'sequence_num' field.
   */
  public java.lang.Integer getSequenceNum() {
    return sequence_num;
  }

  /**
   * Sets the value of the 'sequence_num' field.
   * @param value the value to set.
   */
  public void setSequenceNum(java.lang.Integer value) {
    this.sequence_num = value;
  }

  /** Creates a new Trade RecordBuilder */
  public static edu.bigdata.training.fileformats.avro.Trade.Builder newBuilder() {
    return new edu.bigdata.training.fileformats.avro.Trade.Builder();
  }
  
  /** Creates a new Trade RecordBuilder by copying an existing Builder */
  public static edu.bigdata.training.fileformats.avro.Trade.Builder newBuilder(edu.bigdata.training.fileformats.avro.Trade.Builder other) {
    return new edu.bigdata.training.fileformats.avro.Trade.Builder(other);
  }
  
  /** Creates a new Trade RecordBuilder by copying an existing Trade instance */
  public static edu.bigdata.training.fileformats.avro.Trade.Builder newBuilder(edu.bigdata.training.fileformats.avro.Trade other) {
    return new edu.bigdata.training.fileformats.avro.Trade.Builder(other);
  }
  
  /**
   * RecordBuilder for Trade instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Trade>
    implements org.apache.avro.data.RecordBuilder<Trade> {

    private java.lang.CharSequence stock_symbol;
    private long trade_time;
    private double trade_price;
    private java.lang.Integer sequence_num;

    /** Creates a new Builder */
    private Builder() {
      super(edu.bigdata.training.fileformats.avro.Trade.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.bigdata.training.fileformats.avro.Trade.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stock_symbol)) {
        this.stock_symbol = data().deepCopy(fields()[0].schema(), other.stock_symbol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.trade_time)) {
        this.trade_time = data().deepCopy(fields()[1].schema(), other.trade_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.trade_price)) {
        this.trade_price = data().deepCopy(fields()[2].schema(), other.trade_price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sequence_num)) {
        this.sequence_num = data().deepCopy(fields()[3].schema(), other.sequence_num);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Trade instance */
    private Builder(edu.bigdata.training.fileformats.avro.Trade other) {
            super(edu.bigdata.training.fileformats.avro.Trade.SCHEMA$);
      if (isValidValue(fields()[0], other.stock_symbol)) {
        this.stock_symbol = data().deepCopy(fields()[0].schema(), other.stock_symbol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.trade_time)) {
        this.trade_time = data().deepCopy(fields()[1].schema(), other.trade_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.trade_price)) {
        this.trade_price = data().deepCopy(fields()[2].schema(), other.trade_price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sequence_num)) {
        this.sequence_num = data().deepCopy(fields()[3].schema(), other.sequence_num);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'stock_symbol' field */
    public java.lang.CharSequence getStockSymbol() {
      return stock_symbol;
    }
    
    /** Sets the value of the 'stock_symbol' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder setStockSymbol(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.stock_symbol = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'stock_symbol' field has been set */
    public boolean hasStockSymbol() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'stock_symbol' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder clearStockSymbol() {
      stock_symbol = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'trade_time' field */
    public java.lang.Long getTradeTime() {
      return trade_time;
    }
    
    /** Sets the value of the 'trade_time' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder setTradeTime(long value) {
      validate(fields()[1], value);
      this.trade_time = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'trade_time' field has been set */
    public boolean hasTradeTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'trade_time' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder clearTradeTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'trade_price' field */
    public java.lang.Double getTradePrice() {
      return trade_price;
    }
    
    /** Sets the value of the 'trade_price' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder setTradePrice(double value) {
      validate(fields()[2], value);
      this.trade_price = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'trade_price' field has been set */
    public boolean hasTradePrice() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'trade_price' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder clearTradePrice() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'sequence_num' field */
    public java.lang.Integer getSequenceNum() {
      return sequence_num;
    }
    
    /** Sets the value of the 'sequence_num' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder setSequenceNum(java.lang.Integer value) {
      validate(fields()[3], value);
      this.sequence_num = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'sequence_num' field has been set */
    public boolean hasSequenceNum() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'sequence_num' field */
    public edu.bigdata.training.fileformats.avro.Trade.Builder clearSequenceNum() {
      sequence_num = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Trade build() {
      try {
        Trade record = new Trade();
        record.stock_symbol = fieldSetFlags()[0] ? this.stock_symbol : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.trade_time = fieldSetFlags()[1] ? this.trade_time : (java.lang.Long) defaultValue(fields()[1]);
        record.trade_price = fieldSetFlags()[2] ? this.trade_price : (java.lang.Double) defaultValue(fields()[2]);
        record.sequence_num = fieldSetFlags()[3] ? this.sequence_num : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
